plugins {
    id 'java-conventions'
    id 'java-library'
    id 'org.springframework.boot' version "${springBootVersion}"
}

dependencies {
    implementation platform(project(':platform'))
    annotationProcessor platform(project(':platform'))
    api project(':domain')
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.mapstruct:mapstruct'
    implementation 'org.hibernate.validator:hibernate-validator:6.1.6.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor'
    api('org.springframework.boot:spring-boot-starter-hateoas') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-web'
    }
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'com.github.javafaker:javafaker'
}

compileJava {
    options.compilerArgs += [
            '-Amapstruct.defaultInjectionStrategy=constructor',
            '-Amapstruct.defaultComponentModel=spring'
    ]
}

bootJar.enabled = false
jar.enabled = true
